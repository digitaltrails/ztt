# Generated by Django 5.2.6 on 2025-10-14 03:21

from django.db import migrations
from django.utils import timezone
from datetime import datetime, time

def set_initial_dates(apps, schema_editor):
    YourModel = apps.get_model('worktracking', 'Issue')

    for record in YourModel.objects.all():
        if record.outing and record.outing.date:  # Assuming Outing has a 'date' field
            # Use outing date at 16:00 (4 PM)
            record.created_at = datetime.combine(record.outing.date, time(16, 0))
            if record.created_at:
                record.created_at = timezone.make_aware(record.created_at)
        else:
            # Set to a specific date (e.g., January 1, 2023 at 16:00)
            specific_date = datetime(2025, 7, 15, 12, 0)
            record.created_at = timezone.make_aware(specific_date)

        # Set updated_at to the same as created_at for initial records
        record.updated_at = record.created_at
        record.save()


def reverse_dates(apps, schema_editor):
    # Optional: define how to reverse this if needed
    YourModel = apps.get_model('worktracking', 'Issue')
    YourModel.objects.all().update(created_at=None, updated_at=None)

class Migration(migrations.Migration):

    dependencies = [
        ('worktracking', '0036_issue_created_at_issue_updated_at'),
    ]

    operations = [
        migrations.RunPython(set_initial_dates, reverse_dates),
    ]
